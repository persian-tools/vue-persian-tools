(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{133:function(module,__webpack_exports__,__webpack_require__){"use strict";var vue_demi__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(8);__webpack_exports__.a=function(func,name){var setElementText=function setElementText(el){el.value?el.value=func(el.value):el.innerText?el.innerText=func(el.innerText):el.textContent&&(el.textContent=func(el.textContent))},inputEvent=function inputEvent(e){var target=e.target;target&&setElementText(target)};function mounted(el,binding){setElementText(el),binding.modifiers.sync&&el.addEventListener("input",inputEvent)}function unmounted(el,binding){binding.modifiers.sync&&el.removeEventListener("input",inputEvent)}return vue_demi__WEBPACK_IMPORTED_MODULE_0__.c?{mounted:mounted,unmounted:unmounted,name:name}:{bind:mounted,unbind:unmounted,name:name}}},17:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getSlot}));var vue_demi__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(8);function getSlot(Vue,props){return vue_demi__WEBPACK_IMPORTED_MODULE_0__.c?Vue.$slots.default?Vue.$slots.default(props):void 0:Vue.$scopedSlots.default(props)}},18:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__.a={props:{tag:{type:String,default:"span"}}}},439:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/code-brackets.2e1112d7.svg"},440:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/comments.a3859089.svg"},441:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/repo.6d496322.svg"},462:function(module,exports,__webpack_require__){__webpack_require__(463),__webpack_require__(619),__webpack_require__(620),__webpack_require__(817),__webpack_require__(818),__webpack_require__(821),__webpack_require__(822),__webpack_require__(819),__webpack_require__(816),__webpack_require__(823),__webpack_require__(824),module.exports=__webpack_require__(807)},530:function(module,exports){},620:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(192)},807:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(192).configure)([__webpack_require__(808),__webpack_require__(815)],module,!1)}).call(this,__webpack_require__(186)(module))},808:function(module,exports,__webpack_require__){var map={"./Introduction.story.mdx":809};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=808},809:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(20),__webpack_require__(39),__webpack_require__(7),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(22),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(207),_assets_code_brackets_svg__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(439),_assets_code_brackets_svg__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(_assets_code_brackets_svg__WEBPACK_IMPORTED_MODULE_6__),_assets_comments_svg__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__(810),__webpack_require__(440)),_assets_comments_svg__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(_assets_comments_svg__WEBPACK_IMPORTED_MODULE_8__),_assets_repo_svg__WEBPACK_IMPORTED_MODULE_12__=(__webpack_require__(811),__webpack_require__(812),__webpack_require__(813),__webpack_require__(441)),_assets_repo_svg__WEBPACK_IMPORTED_MODULE_12___default=__webpack_require__.n(_assets_repo_svg__WEBPACK_IMPORTED_MODULE_12__),_excluded=(__webpack_require__(814),["components"]);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_5__.b,{title:"Introduction",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("style",null,"\n  .subheading {\n    --mediumdark: '#999999';\n    font-weight: 900;\n    font-size: 13px;\n    color: #999;\n    letter-spacing: 6px;\n    line-height: 24px;\n    text-transform: uppercase;\n    margin-bottom: 12px;\n    margin-top: 40px;\n  }\n\n  .link-list {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    row-gap: 10px;\n  }\n\n  @media (min-width: 620px) {\n    .link-list {\n      row-gap: 20px;\n      column-gap: 20px;\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  @media all and (-ms-high-contrast:none) {\n  .link-list {\n      display: -ms-grid;\n      -ms-grid-columns: 1fr 1fr;\n      -ms-grid-rows: 1fr 1fr;\n    }\n  }\n\n  .link-item {\n    display: block;\n    padding: 20px 30px 20px 15px;\n    border: 1px solid #00000010;\n    border-radius: 5px;\n    transition: background 150ms ease-out, border 150ms ease-out, transform 150ms ease-out;\n    color: #333333;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .link-item:hover {\n    border-color: #1EA7FD50;\n    transform: translate3d(0, -3px, 0);\n    box-shadow: rgba(0, 0, 0, 0.08) 0 3px 10px 0;\n  }\n\n  .link-item:active {\n    border-color: #1EA7FD;\n    transform: translate3d(0, 0, 0);\n  }\n\n  .link-item strong {\n    font-weight: 700;\n    display: block;\n    margin-bottom: 2px;\n  }\n  \n  .link-item img {\n    height: 40px;\n    width: 40px;\n    margin-right: 15px;\n    flex: none;\n  }\n\n  .link-item span {\n    font-size: 14px;\n    line-height: 20px;\n  }\n\n  .tip {\n    display: inline-block;\n    border-radius: 1em;\n    font-size: 11px;\n    line-height: 12px;\n    font-weight: 700;\n    background: #E7FDD8;\n    color: #66BF3C;\n    padding: 4px 12px;\n    margin-right: 10px;\n    vertical-align: top;\n  }\n\n  .tip-wrapper {\n    font-size: 13px;\n    line-height: 20px;\n    margin-bottom: 10px;\n  }\n\n  .tip-wrapper--first {\n    margin-top: 40px;\n  }\n\n  .tip-wrapper code {\n    font-size: 12px;\n    display: inline-block;\n  }\n\n  \n"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("h1",{id:"welcome-to-vue-persian-tools"},"Welcome to Vue Persian Tools"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("p",null,"An anthology of a variety of tools for the Persian language in javascript"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("div",{className:"subheading"},"Learn"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("div",{className:"link-list"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("a",{className:"link-item",href:"https://persian-tools.js.org/",target:"_blank"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("img",{src:_assets_repo_svg__WEBPACK_IMPORTED_MODULE_12___default.a,alt:"repo"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("span",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("strong",null,"documentation"),"Configure, customize, and extend")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("a",{className:"link-item",href:"https://github.com/persian-tools/vue-persian-tools",target:"_blank"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("img",{src:_assets_code_brackets_svg__WEBPACK_IMPORTED_MODULE_6___default.a,alt:"code"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("span",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("strong",null,"GitHub project"),"View the source and add issues")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("a",{className:"link-item",href:"https://github.com/persian-tools",target:"_blank"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("img",{src:_assets_comments_svg__WEBPACK_IMPORTED_MODULE_8___default.a,alt:"comments"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("span",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("strong",null,"Organization"),"Chat with maintainers and the community"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("div",{className:"tip-wrapper tip-wrapper--first"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("span",{className:"tip"},"Tip"),"Edit the Markdown in"," ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("code",null,"/stories/Introduction.story.mdx")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("div",{className:"tip-wrapper"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("span",{className:"tip"},"Contributing"),"Thank you for your interest in contributing! Please feel free to put up a PR for any issue or feature request."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("div",{className:"tip-wrapper"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)("span",{className:"tip"},"License"),"This project is licensed under the MIT License"))}MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_5__.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.b)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},810:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/colors.a4bd0486.svg"},811:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/direction.b770f9af.svg"},812:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/flow.edad2ac1.svg"},813:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/plugin.d494b228.svg"},814:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/stackalt.dba9fbb3.svg"},815:function(module,exports,__webpack_require__){var map={"./Sheba.story.ts":825,"./URLfix.story.ts":826,"./addOrdinalSuffix.story.ts":827,"./bill.story.ts":828,"./commas.story.ts":820,"./digits.story.ts":829,"./directives/halfspaceDirective.story.ts":830,"./directives/toPersianDirective.story.ts":831,"./directives/urlFixDirective.story.ts":832,"./extractCardNumber.story.ts":833,"./getBankNameFromCardNumber.story.ts":834,"./getPlaceByIranNationalId.story.ts":835,"./halfspace.story.ts":836,"./hasPersian.story.ts":837,"./isArabic.story.ts":838,"./isPersian.story.ts":839,"./numberToWords.story.ts":840,"./phoneNumber.story.ts":841,"./removeOrdinalSuffix.story.ts":842,"./toPersianChars.story.ts":843,"./verifyCardNumber.story.ts":844,"./verifyIranianNationalId.story.ts":845,"./wordsToNumber.story.ts":846};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=815},820:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7),__webpack_require__(71);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),commas_add=Object(index_esm.a)({name:"addCommas",mixins:[tagPropMixin_skip.a],props:{number:{type:[String,Number],required:!0}},computed:{add:function add(){return Object(persian_tools_esm.f)(this.number)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{number:this.add});return Object(index_esm.b)(this.tag,__SLOTS__)}}),commas_remove=Object(index_esm.a)({name:"removeCommas",mixins:[tagPropMixin_skip.a],props:{number:{type:String,required:!0}},computed:{remove:function remove(){return Object(persian_tools_esm.v)(this.number)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{number:this.remove});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{addCommas:commas_add,removeCommas:commas_remove},setup:function setup(){return{add:args.add,remove:args.remove}},template:'\n    <div>\n     <h4>add commas to number:</h4>\n     <addCommas :number=add v-slot="{ number }"> {{ number }}</addCommas>\n     <hr />\n     <h4>remove commas from number:</h4>\n     <removeCommas :number=remove v-slot="{ number }">{{ number }}</removeCommas>\n    </div>\n    '}}.bind({});Default.args={add:"96312",remove:"12,567,980"};__webpack_exports__.default={title:"Modules/commas",argTypes:{add:{name:"add",type:{name:"string",required:!0},defaultValue:null,description:"add commas to number",table:{type:{summary:"string | number"},defaultValue:{summary:"null"}},control:{type:"text"}},remove:{name:"remove",type:{name:"string",required:!0},defaultValue:null,description:"remove commas from number",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { addCommas, removeCommas },\n    setup() {\n        return {\n            add: args.add,\n            remove: args.remove\n        };\n    },\n    template: `\n    <div>\n     <h4>add commas to number:</h4>\n     <addCommas :number=add v-slot="{ number }"> {{ number }}</addCommas>\n     <hr />\n     <h4>remove commas from number:</h4>\n     <removeCommas :number=remove v-slot="{ number }">{{ number }}</removeCommas>\n    </div>\n    `\n})'}},Default.parameters)},824:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));__webpack_require__(20),__webpack_require__(39),__webpack_require__(51),__webpack_require__(805),__webpack_require__(41),__webpack_require__(806);var client_api=__webpack_require__(851),esm=__webpack_require__(6),parameters={actions:{argTypesRegex:"^on[A-Z].*"}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(client_api.b)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(client_api.c)(loader,!1)}));case"parameters":return Object(client_api.d)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(client_api.a)(enhancer)}));case"globals":case"globalTypes":var v={};return v[key]=value,Object(client_api.d)(v,!1);default:return console.log(key+" was not supported :( !")}}))},825:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),sheba=Object(index_esm.a)({name:"Sheba",mixins:[tagPropMixin_skip.a],props:{shebaCode:{type:String,required:!0}},computed:{isValid:function isValid(){return new persian_tools_esm.c(this.shebaCode).validate()},info:function info(){return new persian_tools_esm.c(this.shebaCode).recognize()}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{isValid:this.isValid,info:this.info});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{Sheba:sheba},setup:function setup(){return{code:args.val}},template:'\n    <Sheba :shebaCode="code" v-slot="{ isValid, info }">\n        is sheba valid: <b>{{ isValid }}</b>\n        <br />\n        <br />\n        <h3>info about sheba</h3>\n        <div v-if="info">\n            <p> nickname: {{ info.nickname }} </p>\n            <p> name: {{ info.name }} </p>\n            <p> persianName: {{ info.persianName }} </p>\n            <p> code: {{ info.code }} </p>\n            <p> accountNumberAvailable: {{ info.accountNumberAvailable }} </p>\n        </div>\n        <div v-else>\n            invalid\n        </div>\n    </Sheba>\n    '}}.bind({});Default.args={val:"IR820540102680020817909002"};__webpack_exports__.default={title:"Modules/Sheba",component:sheba,argTypes:{val:{name:"shebaCode",type:{name:"string",required:!0},defaultValue:null,description:"get info & validate iranian Sheba(IBAN)",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { Sheba },\n    setup() {\n        return {\n            code: args.val\n        };\n    },\n    template: `\n    <Sheba :shebaCode="code" v-slot="{ isValid, info }">\n        is sheba valid: <b>{{ isValid }}</b>\n        <br />\n        <br />\n        <h3>info about sheba</h3>\n        <div v-if="info">\n            <p> nickname: {{ info.nickname }} </p>\n            <p> name: {{ info.name }} </p>\n            <p> persianName: {{ info.persianName }} </p>\n            <p> code: {{ info.code }} </p>\n            <p> accountNumberAvailable: {{ info.accountNumberAvailable }} </p>\n        </div>\n        <div v-else>\n            invalid\n        </div>\n    </Sheba>\n    `\n})'}},Default.parameters)},826:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),URLfix=Object(index_esm.a)({name:"URLfix",mixins:[tagPropMixin_skip.a],props:{url:{type:String,required:!0}},computed:{fixURL:function fixURL(){return Object(persian_tools_esm.d)(this.url)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{url:this.fixURL});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{URLfix:URLfix},setup:function setup(){return{url:args.val}},template:'<URLfix :url="url" v-slot="{ url }">fixed URL: <b>{{ url }}</b></URLfix>'}}.bind({});Default.args={val:"https://fa.wikipedia.org/wiki/%D9%85%D8%AF%DB%8C%D8%A7%D9%88%DB%8C%DA%A9%DB%8C:Gadget-Extra-Editbuttons-botworks.js"};__webpack_exports__.default={title:"Modules/URLfix",component:URLfix,argTypes:{val:{name:"url",type:{name:"string",required:!0},defaultValue:null,description:"url that need to be fixed",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { URLfix },\n    setup() {\n        return {\n            url: args.val\n        };\n    },\n    template: \'<URLfix :url="url" v-slot="{ url }">fixed URL: <b>{{ url }}</b></URLfix>\'\n})'}},Default.parameters)},827:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),addOrdinalSuffix=Object(index_esm.a)({name:"addOrdinalSuffix",mixins:[tagPropMixin_skip.a],props:{number:{type:String,required:!0}},computed:{addOrdinalSuffixValue:function addOrdinalSuffixValue(){return Object(persian_tools_esm.g)(this.number)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{text:this.addOrdinalSuffixValue});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{addOrdinalSuffix:addOrdinalSuffix},setup:function setup(){return{text:args.val}},template:'<addOrdinalSuffix :number="text" v-slot="{ text }"><b>{{ text }}</b></addOrdinalSuffix>'}}.bind({});Default.args={val:"چهل و پنج"};__webpack_exports__.default={title:"Modules/addOrdinalSuffix",component:addOrdinalSuffix,argTypes:{val:{name:"number",type:{name:"string",required:!0},defaultValue:null,description:"Add Ordinal suffix to numbers.",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { addOrdinalSuffix },\n    setup() {\n        return {\n            text: args.val\n        };\n    },\n    template: \'<addOrdinalSuffix :number="text" v-slot="{ text }"><b>{{ text }}</b></addOrdinalSuffix>\'\n})'}},Default.parameters)},828:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(50),__webpack_require__(24),__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),Bill=Object(index_esm.a)({name:"bill",mixins:[tagPropMixin_skip.a],props:{bill:{type:Object,required:!0}},computed:{getResult:function getResult(){return new persian_tools_esm.a(this.bill).getResult()},getAmount:function getAmount(){return new persian_tools_esm.a(this.bill).getAmount()},getBillType:function getBillType(){return new persian_tools_esm.a(this.bill).getBillType()},getBarcode:function getBarcode(){return new persian_tools_esm.a(this.bill).getBarcode()},verificationBill:function verificationBill(){return new persian_tools_esm.a(this.bill).verificationBill()},verificationBillId:function verificationBillId(){return new persian_tools_esm.a(this.bill).verificationBillId()},verificationBillPayment:function verificationBillPayment(){return new persian_tools_esm.a(this.bill).verificationBillPayment()}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{result:this.getResult,amount:this.getAmount,type:this.getBillType,barcode:this.getBarcode,isBillValid:this.verificationBill,isBillIdValid:this.verificationBillId,isBillPaymentValid:this.verificationBillPayment});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{bill:Bill},setup:function setup(){return{val:JSON.parse(function txtToJson(objString){return objString.replace(/(\w+:)|(\w+ :)/g,(function(matchedStr){return'"'+matchedStr.substring(0,matchedStr.length-1)+'":'}))}(args.val))}},template:'<div><bill :bill=val v-slot="{ result, amount, type, isBillValid, isBillIdValid, isBillPaymentValid }">\n                            <p id="s1">result of bill: <h5>{{ result }}</h5></p>\n                            <p id="s2">amount: <h5>{{ amount }}</h5></p>\n                            <p id="s3">bill type: <h5>{{ type }}</h5></p>\n                            <p id="s4">is bill valid: <h5>{{ isBillValid }}</h5> </p>\n                            <p id="s5">is bill id valid: <h5>{{ isBillIdValid }}</h5> </p>\n                            <p id="s6">is bill payment id valid: <h5>{{ isBillPaymentValid }}</h5> </p>\n                        </bill></div>'}}.bind({});Default.args={val:'{ billId: 7748317800142, paymentId: 1770160, currency: "rial" }'};__webpack_exports__.default={title:"Modules/bill",component:Bill,argTypes:{val:{name:"bill",type:{name:"object",required:!0},defaultValue:null,description:"your bill object.",table:{type:{summary:"object"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { bill },\n    setup() {\n        const _val = JSON.parse(txtToJson(args.val))\n        return {\n            val: _val\n        };\n    },\n    template: `<div><bill :bill=val v-slot="{ result, amount, type, isBillValid, isBillIdValid, isBillPaymentValid }">\n                            <p id="s1">result of bill: <h5>{{ result }}</h5></p>\n                            <p id="s2">amount: <h5>{{ amount }}</h5></p>\n                            <p id="s3">bill type: <h5>{{ type }}</h5></p>\n                            <p id="s4">is bill valid: <h5>{{ isBillValid }}</h5> </p>\n                            <p id="s5">is bill id valid: <h5>{{ isBillIdValid }}</h5> </p>\n                            <p id="s6">is bill payment id valid: <h5>{{ isBillPaymentValid }}</h5> </p>\n                        </bill></div>`\n})'}},Default.parameters)},829:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7),__webpack_require__(71),__webpack_require__(60),__webpack_require__(25),__webpack_require__(63);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),digits=Object(index_esm.a)({name:"digits",mixins:[tagPropMixin_skip.a],props:{number:{type:[String,Number],required:!0},convert:{type:String,default:"enFa",validator:function validator(value){return["enFa","enAr","faEn","arFa","arEn"].includes(value)}}},computed:{convertNumber:function convertNumber(){var _value=void 0;switch(this.convert){case"enFa":_value=Object(persian_tools_esm.k)(this.number);break;case"enAr":_value=Object(persian_tools_esm.j)(this.number);break;case"faEn":_value=Object(persian_tools_esm.l)(this.number.toString());break;case"arFa":_value=Object(persian_tools_esm.i)(this.number.toString());break;case"arEn":_value=Object(persian_tools_esm.h)(this.number.toString())}return _value}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{value:this.convertNumber});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{digits:digits},setup:function setup(){return{val:args.val,convert:args.convert}},template:'<digits :number=val :convert=convert v-slot="{ value }">converted to: {{ value }}</digits>'}}.bind({});Default.args={val:"3500",convert:"enFa"};__webpack_exports__.default={title:"Modules/digits",component:digits,argTypes:{val:{name:"number",type:{name:"string",required:!0},defaultValue:null,description:"convert digits to given language",table:{type:{summary:"string | number"},defaultValue:{summary:"null"}},control:{type:"text"}},convert:{name:"convert",type:{name:"string",required:!0},defaultValue:"en",description:"language to convert.",table:{type:{summary:"enFa | enAr | faEn | arFa | arEn"},defaultValue:{summary:"null"}},control:{type:"radio",options:["enFa","enAr","faEn","arFa","arEn"]}}}};Default.parameters=Object.assign({storySource:{source:"(args: any) => ({\n    components: { digits },\n    setup() {\n        return {\n            val: args.val,\n            convert: args.convert\n        };\n    },\n    template: '<digits :number=val :convert=convert v-slot=\"{ value }\">converted to: {{ value }}</digits>'\n})"}},Default.parameters)},830:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var foundation=__webpack_require__(133),persian_tools_esm=__webpack_require__(9),halfSpace=Object(foundation.a)(persian_tools_esm.p,"halfSpace"),Default=function Template(args){return{directives:{halfSpace:halfSpace},setup:function setup(){return{text:args.val}},template:'<div>\n        <div><strong>Text:</strong> {{text}}</div>\n        <br />\n        <div><strong>Fixed text:</strong> <span v-half-space>{{text}}</span></div>\n        <br />\n        <input :value="text" v-half-space.sync />\n    </div>'}}.bind({});Default.args={val:"نمی خواهی درخت ها را ببینیم؟"};__webpack_exports__.default={title:"Directives/halfSpace",argTypes:{val:{name:"str",type:{name:"string",required:!0},defaultValue:null,description:"Replace spaces for given text with halfspace.",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    directives: { halfSpace: halfSpace },\n    setup() {\n        return {\n            text: args.val\n        };\n    },\n    template: `<div>\n        <div><strong>Text:</strong> {{text}}</div>\n        <br />\n        <div><strong>Fixed text:</strong> <span v-half-space>{{text}}</span></div>\n        <br />\n        <input :value="text" v-half-space.sync />\n    </div>`\n})'}},Default.parameters)},831:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var foundation=__webpack_require__(133),persian_tools_esm=__webpack_require__(9),toPersian=Object(foundation.a)(persian_tools_esm.x,"toPersian"),Default=function Template(args){return{directives:{toPersian:toPersian},setup:function setup(){return{text:args.val}},template:'<div>\n        <div><strong>Text:</strong> {{text}}</div>\n        <br />\n        <div><strong>Fixed text:</strong> <span v-to-persian>{{text}}</span></div>\n        <br />\n        <input :value="text" v-to-persian.sync />\n    </div>'}}.bind({});Default.args={val:"علي كيك خورد."};__webpack_exports__.default={title:"Directives/toPersian",argTypes:{val:{name:"str",type:{name:"string",required:!0},defaultValue:null,description:"Description: Replaces all instances of ي and ك withی and ک, respectively. It should not make any ch anges to Arabic text surrounded by appropriate templates.",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    directives: { toPersian: toPersian },\n    setup() {\n        return {\n            text: args.val\n        };\n    },\n    template: `<div>\n        <div><strong>Text:</strong> {{text}}</div>\n        <br />\n        <div><strong>Fixed text:</strong> <span v-to-persian>{{text}}</span></div>\n        <br />\n        <input :value="text" v-to-persian.sync />\n    </div>`\n})'}},Default.parameters)},832:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var foundation=__webpack_require__(133),persian_tools_esm=__webpack_require__(9),urlFix=Object(foundation.a)(persian_tools_esm.d,"URLfix"),Default=function Template(args){return{directives:{urlFix:urlFix},setup:function setup(){return{text:args.val}},template:'<div>\n        <div><strong>URL:</strong> {{text}}</div>\n        <br />\n        <div><strong>Fixed URL:</strong> <span v-url-fix>{{text}}</span></div>\n        <br />\n        <input :value="text" v-url-fix.sync />\n    </div>'}}.bind({});Default.args={val:"https://fa.wikipedia.org/wiki/%D9%85%D8%AF%DB%8C%D8%A7%D9%88%DB%8C%DA%A9%DB%8C:Gadget-Extra-Editbuttons-botworks.js"};__webpack_exports__.default={title:"Directives/urlFix",argTypes:{val:{name:"str",type:{name:"string",required:!0},defaultValue:null,description:"url that need to be fixed",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    directives: { urlFix: urlFix },\n    setup() {\n        return {\n            text: args.val\n        };\n    },\n    template: `<div>\n        <div><strong>URL:</strong> {{text}}</div>\n        <br />\n        <div><strong>Fixed URL:</strong> <span v-url-fix>{{text}}</span></div>\n        <br />\n        <input :value="text" v-url-fix.sync />\n    </div>`\n})'}},Default.parameters)},833:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),extractCardNumber=Object(index_esm.a)({name:"extractCardNumber",mixins:[tagPropMixin_skip.a],props:{str:{type:String,required:!0}},computed:{extractCardNumbers:function extractCardNumbers(){return Object(persian_tools_esm.m)(this.str,{detectBankNumber:!0,checkValidation:!0,filterValidCardNumbers:!1})},extractValidCardNumbers:function extractValidCardNumbers(){return Object(persian_tools_esm.m)(this.str,{detectBankNumber:!0,checkValidation:!0,filterValidCardNumbers:!0})}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{cards:this.extractCardNumbers,valid:this.extractValidCardNumbers});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{extractCardNumber:extractCardNumber},setup:function setup(){return{val:args.val}},template:'<extractCardNumber :str="val" v-slot="{ cards, valid }">\n                    <ul>\n                        <h4>all extracted cards: </h4>\n                        <li v-for="(card, i) in cards" :key="i">\n                            <p>index: {{ card.index }}</p>\n                            <p>pure: {{ card.pure }}</p>\n                            <p>base: {{ card.base }}</p>\n                            <p>isValid: {{ card.isValid }}</p>\n                            <hr />\n                        </li>\n                        <br />\n                        <br />\n                        <h4>all valid cards: </h4>\n                        <li v-for="(card, i) in valid" :key="i">\n                            <p>index: {{ card.index }}</p>\n                            <p>pure: {{ card.pure }}</p>\n                            <p>base: {{ card.base }}</p>\n                            <p>isValid: {{ card.isValid }}</p>\n                            <hr />\n                        </li>\n                    </ul>\n                    <br />\n                </extractCardNumber>'}}.bind({});Default.args={val:"شماره کارتم رو برات نوشتم:\n6219-8610-3452-9007\nاینم یه شماره کارت دیگه ای که دارم\n5022291070873466\n۵۰۲۲۲۹۱۰۸۱۸۷۳۴۶۶\n۵۰۲۲-۲۹۱۰-۷۰۸۷-۳۴۶۶"};__webpack_exports__.default={title:"Modules/extractCardNumber",component:extractCardNumber,argTypes:{val:{name:"str",type:{name:"string",required:!0},defaultValue:null,description:"extract card numbers from given text.",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { extractCardNumber },\n    setup() {\n        return {\n            val: args.val\n        };\n    },\n    template: `<extractCardNumber :str="val" v-slot="{ cards, valid }">\n                    <ul>\n                        <h4>all extracted cards: </h4>\n                        <li v-for="(card, i) in cards" :key="i">\n                            <p>index: {{ card.index }}</p>\n                            <p>pure: {{ card.pure }}</p>\n                            <p>base: {{ card.base }}</p>\n                            <p>isValid: {{ card.isValid }}</p>\n                            <hr />\n                        </li>\n                        <br />\n                        <br />\n                        <h4>all valid cards: </h4>\n                        <li v-for="(card, i) in valid" :key="i">\n                            <p>index: {{ card.index }}</p>\n                            <p>pure: {{ card.pure }}</p>\n                            <p>base: {{ card.base }}</p>\n                            <p>isValid: {{ card.isValid }}</p>\n                            <hr />\n                        </li>\n                    </ul>\n                    <br />\n                </extractCardNumber>`\n})'}},Default.parameters)},834:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7),__webpack_require__(71);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),getBankNameFromCardNumber=Object(index_esm.a)({name:"getBankNameFromCardNumber ",mixins:[tagPropMixin_skip.a],props:{digits:{type:[String,Number],required:!0}},computed:{getBankName:function getBankName(){return Object(persian_tools_esm.n)(this.digits)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{bankName:this.getBankName});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{getBankNameFromCardNumber:getBankNameFromCardNumber},setup:function setup(){return{text:args.val}},template:'<getBankNameFromCardNumber :digits="text" v-slot="{ bankName }">\n    name of the bank for given number: <b>{{ bankName }}</b>\n    </getBankNameFromCardNumber>'}}.bind({});Default.args={val:"6037701689095443"};__webpack_exports__.default={title:"Modules/getBankNameFromCardNumber",component:getBankNameFromCardNumber,argTypes:{val:{name:"digits",type:{name:"number",required:!0},defaultValue:null,description:"get bank name for given number.",table:{type:{summary:"number | string"},defaultValue:{summary:"null"}},control:{type:"number"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { getBankNameFromCardNumber },\n    setup() {\n        return {\n            text: args.val\n        };\n    },\n    template: `<getBankNameFromCardNumber :digits="text" v-slot="{ bankName }">\n    name of the bank for given number: <b>{{ bankName }}</b>\n    </getBankNameFromCardNumber>`\n})'}},Default.parameters)},835:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),getPlaceByIranNationalId=Object(index_esm.a)({name:"getPlaceByIranNationalId",mixins:[tagPropMixin_skip.a],props:{nationalId:{type:String,required:!0}},computed:{city:function city(){var _getPlaceByIranNation;return null===(_getPlaceByIranNation=Object(persian_tools_esm.o)(this.nationalId))||void 0===_getPlaceByIranNation?void 0:_getPlaceByIranNation.city},province:function province(){var _getPlaceByIranNation2;return null===(_getPlaceByIranNation2=Object(persian_tools_esm.o)(this.nationalId))||void 0===_getPlaceByIranNation2?void 0:_getPlaceByIranNation2.province},codes:function codes(){var _getPlaceByIranNation3;return null===(_getPlaceByIranNation3=Object(persian_tools_esm.o)(this.nationalId))||void 0===_getPlaceByIranNation3?void 0:_getPlaceByIranNation3.codes}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{city:this.city,province:this.province,codes:this.codes});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{getPlaceByIranNationalId:getPlaceByIranNationalId},setup:function setup(){return{text:args.val}},template:'<getPlaceByIranNationalId :nationalId="text" v-slot="{ city, codes, province }">\n        city: <b> {{ city || "invalid" }} </b> <br />\n        province: <b> {{ province || "invalid" }} </b> <br />\n        codes: <b> {{ codes || "invalid" }} </b>\n    </getPlaceByIranNationalId>'}}.bind({});Default.args={val:"0084575948"};__webpack_exports__.default={title:"Modules/getPlaceByIranNationalId",component:getPlaceByIranNationalId,argTypes:{val:{name:"nationalId",type:{name:"string",required:!0},defaultValue:null,description:"return info for given national id.",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { getPlaceByIranNationalId },\n    setup() {\n        return {\n            text: args.val\n        };\n    },\n    template: `<getPlaceByIranNationalId :nationalId="text" v-slot="{ city, codes, province }">\n        city: <b> {{ city || "invalid" }} </b> <br />\n        province: <b> {{ province || "invalid" }} </b> <br />\n        codes: <b> {{ codes || "invalid" }} </b>\n    </getPlaceByIranNationalId>`\n})'}},Default.parameters)},836:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),halfSpace=Object(index_esm.a)({name:"halfSpace",mixins:[tagPropMixin_skip.a],props:{str:{type:String,required:!0}},computed:{computeHalfspace:function computeHalfspace(){return Object(persian_tools_esm.p)(this.str)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{text:this.computeHalfspace});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{halfSpace:halfSpace},setup:function setup(){return{text:args.val}},template:'<halfSpace :str="text" v-slot="{ text }"><b>{{ text }}</b></halfSpace>'}}.bind({});Default.args={val:"نمی     ‌خواهی    درخت ها    را    ببینیم؟"};__webpack_exports__.default={title:"Modules/halfSpace",component:halfSpace,argTypes:{val:{name:"str",type:{name:"string",required:!0},defaultValue:null,description:"Replace spaces for given text with halfspace.",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { halfSpace },\n    setup() {\n        return {\n            text: args.val\n        };\n    },\n    template: \'<halfSpace :str="text" v-slot="{ text }"><b>{{ text }}</b></halfSpace>\'\n})'}},Default.parameters)},837:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),hasPersian=Object(index_esm.a)({name:"hasPersian",mixins:[tagPropMixin_skip.a],props:{str:{type:String,required:!0}},computed:{hasPersianInText:function hasPersianInText(){return Object(persian_tools_esm.q)(this.str)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{hasPersian:this.hasPersianInText});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{hasPersian:hasPersian},setup:function setup(){return{text:args.val}},template:'<hasPersian :str="text" v-slot="{ hasPersian }">is string contains persian chars: <b>{{ hasPersian }}</b></hasPersian>'}}.bind({});Default.args={val:"hello متن فارسی"};__webpack_exports__.default={title:"Modules/hasPersian",component:hasPersian,argTypes:{val:{name:"str",type:{name:"string",required:!0},defaultValue:null,description:"Check if string includes persian alphabet.",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { hasPersian },\n    setup() {\n        return {\n            text: args.val\n        };\n    },\n    template: \'<hasPersian :str="text" v-slot="{ hasPersian }">is string contains persian chars: <b>{{ hasPersian }}</b></hasPersian>\'\n})'}},Default.parameters)},838:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(99),__webpack_require__(24),__webpack_require__(136),__webpack_require__(63),__webpack_require__(50),__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),isArabic=Object(index_esm.a)({name:"isArabic",mixins:[tagPropMixin_skip.a],props:{str:{type:String,required:!0},trimPattern:{type:RegExp,default:/["'-+()؟\s.]/g}},computed:{isAr:function isAr(){return Object(persian_tools_esm.r)(this.str,this.trimPattern)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{isArabic:this.isAr});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{isArabic:isArabic},setup:function setup(){var regex=function generateRegex(regString){var match=regString.match(new RegExp("^/(.*?)/([gimy]*)$"));return new RegExp(match[1],match[2])}(args.pattern);return{text:args.val.replace(/\s/g,""),trim:regex}},template:'<isArabic :str="text" :trimPattern="trim" v-slot="{isArabic}">is given text arabic: <b>{{ isArabic }}</b></isArabic>'}}.bind({});Default.args={val:"أكد رئيس اللجنة العسكرية الممثلة لحكومة الوفاق الوطني في ليبيا أحمد علي أبو شحمة، أن اللجنة لا تستطيع تنفيذ خطتها لإخراج العناصر الأجنبية من أراضي البلاد.",pattern:"/[\"'-+()؟s.]/g"};__webpack_exports__.default={title:"Modules/isArabic",component:isArabic,argTypes:{val:{name:"str",type:{name:"string",required:!0},defaultValue:null,description:"checks if given value is arabic or not",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}},pattern:{name:"trimPattern",type:{name:"string",required:!1},defaultValue:null,description:"Pattern of characters which you want to trim from the string e.g. '-+. ()'",table:{type:{summary:"RegExp"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { isArabic },\n    setup() {\n        const regex = generateRegex(args.pattern);\n        return {\n            text: args.val.replace(/\\s/g, ""),\n            trim: regex\n        };\n    },\n    template: \'<isArabic :str="text" :trimPattern="trim" v-slot="{isArabic}">is given text arabic: <b>{{ isArabic }}</b></isArabic>\'\n})'}},Default.parameters)},839:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(99),__webpack_require__(24),__webpack_require__(136),__webpack_require__(63),__webpack_require__(50),__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),isPersian=Object(index_esm.a)({name:"isPersian",mixins:[tagPropMixin_skip.a],props:{str:{type:String,required:!0},trimPattern:{type:RegExp,default:/["'-+()؟\s.]/g},isComplex:Boolean},computed:{isFa:function isFa(){return Object(persian_tools_esm.s)(this.str,this.isComplex,this.trimPattern)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{isPersian:this.isFa});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{isPersian:isPersian},setup:function setup(){var regex=function generateRegex(regString){var match=regString.match(new RegExp("^/(.*?)/([gimy]*)$"));return new RegExp(match[1],match[2])}(args.pattern);return{text:args.val.replace(/\s/g,""),trim:regex,complex:args.complex}},template:'<is-persian :str="text" :isComplex="complex" :trimPattern="trim" v-slot="{isPersian}">is given text persian: <b>{{ isPersian }}</b></is-persian>'}}.bind({});Default.args={val:"این یک متن فارسی است",pattern:"/[\"'-+()؟s.]/g",complex:!1};__webpack_exports__.default={title:"Modules/isPersian",component:isPersian,argTypes:{val:{name:"str",type:{name:"string",required:!0},defaultValue:null,description:"checks if given value is persian or not",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}},pattern:{name:"trimPattern",type:{name:"string",required:!1},defaultValue:null,description:"Pattern of characters which you want to trim from the string e.g. '-+. ()'",table:{type:{summary:"RegExp"},defaultValue:{summary:"null"}},control:{type:"text"}},complex:{name:"isComplex",type:{name:"string",required:!1},defaultValue:!1,description:"accepts some of regular arabic characters which are commons in persian texts.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}},control:{type:"boolean"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { isPersian },\n    setup() {\n        const regex = generateRegex(args.pattern);\n        return {\n            text: args.val.replace(/\\s/g, ""),\n            trim: regex,\n            complex: args.complex\n        };\n    },\n    template: \'<is-persian :str="text" :isComplex="complex" :trimPattern="trim" v-slot="{isPersian}">is given text persian: <b>{{ isPersian }}</b></is-persian>\'\n})'}},Default.parameters)},840:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7),__webpack_require__(71);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),numberToWords=Object(index_esm.a)({name:"numberToWords",mixins:[tagPropMixin_skip.a],props:{number:{type:[String,BigInt,Number],required:!0}},computed:{convertToWords:function convertToWords(){return persian_tools_esm.b.convert(this.number)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{words:this.convertToWords});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{numberToWords:numberToWords},setup:function setup(){return{val:args.val}},template:'<numberToWords :number="val" v-slot="{ words }">converted to: <b>{{ words }}</b></numberToWords>'}}.bind({});Default.args={val:"500,443"};__webpack_exports__.default={title:"Modules/numberToWords",component:numberToWords,argTypes:{val:{name:"number",type:{name:"string",required:!0},defaultValue:null,description:"Convert numbers to text.",table:{type:{summary:"string | number"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { numberToWords },\n    setup() {\n        return {\n            val: args.val\n        };\n    },\n    template: \'<numberToWords :number="val" v-slot="{ words }">converted to: <b>{{ words }}</b></numberToWords>\'\n})'}},Default.parameters)},841:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),phoneNumber=Object(index_esm.a)({name:"phoneNumber",mixins:[tagPropMixin_skip.a],props:{number:{type:String,required:!0}},computed:{details:function details(){return Object(persian_tools_esm.t)(this.number)},isValid:function isValid(){return Object(persian_tools_esm.u)(this.number)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{details:this.details,isValid:this.isValid});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{phoneNumber:phoneNumber},setup:function setup(){return{val:args.val}},template:'<div><phoneNumber :number=val v-slot="{ details, isValid }">\n                    <p id="s1">details: {{ details }}</p>\n                    <p id="s2">is phone number valid: {{ isValid }}</p>\n               </phoneNumber></div>'}}.bind({});Default.args={val:"09022002580"};__webpack_exports__.default={title:"Modules/phoneNumber",component:phoneNumber,argTypes:{val:{name:"number",type:{name:"string",required:!0},defaultValue:null,description:"get info & validate phone numbers.",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { phoneNumber },\n    setup() {\n        return {\n            val: args.val\n        };\n    },\n    template: `<div><phoneNumber :number=val v-slot="{ details, isValid }">\n                    <p id="s1">details: {{ details }}</p>\n                    <p id="s2">is phone number valid: {{ isValid }}</p>\n               </phoneNumber></div>`\n})'}},Default.parameters)},842:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),removeOrdinalSuffix=Object(index_esm.a)({name:"removeOrdinalSuffix",mixins:[tagPropMixin_skip.a],props:{number:{type:String,required:!0}},computed:{removeOrdinalSuffixValue:function removeOrdinalSuffixValue(){return Object(persian_tools_esm.w)(this.number)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{text:this.removeOrdinalSuffixValue});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{removeOrdinalSuffix:removeOrdinalSuffix},setup:function setup(){return{text:args.val}},template:'<removeOrdinalSuffix :number="text" v-slot="{ text }"><b>{{ text }}</b></removeOrdinalSuffix>'}}.bind({});Default.args={val:"چهل و سوم"};__webpack_exports__.default={title:"Modules/removeOrdinalSuffix",component:removeOrdinalSuffix,argTypes:{val:{name:"number",type:{name:"string",required:!0},defaultValue:null,description:"remove Ordinal suffix from numbers.",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { removeOrdinalSuffix },\n    setup() {\n        return {\n            text: args.val\n        };\n    },\n    template: \'<removeOrdinalSuffix :number="text" v-slot="{ text }"><b>{{ text }}</b></removeOrdinalSuffix>\'\n})'}},Default.parameters)},843:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),toPersianChars=Object(index_esm.a)({name:"toPersianChars",mixins:[tagPropMixin_skip.a],props:{str:{type:String,required:!0}},computed:{convertToPersianChar:function convertToPersianChar(){return Object(persian_tools_esm.x)(this.str)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{text:this.convertToPersianChar});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{toPersianChars:toPersianChars},setup:function setup(){return{val:args.val}},template:'<toPersianChars :str="val" v-slot="{ text }">converted to: <b>{{ text }}</b></toPersianChars>'}}.bind({});Default.args={val:"علي"};__webpack_exports__.default={title:"Modules/toPersianChars",component:toPersianChars,argTypes:{val:{name:"str",type:{name:"string",required:!0},defaultValue:null,description:"Description: Replaces all instances of ي and ك withی and ک, respectively. It should not make any ch anges to Arabic text surrounded by appropriate templates.",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { toPersianChars },\n    setup() {\n        return {\n            val: args.val\n        };\n    },\n    template: \'<toPersianChars :str="val" v-slot="{ text }">converted to: <b>{{ text }}</b></toPersianChars>\'\n})'}},Default.parameters)},844:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7),__webpack_require__(71);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),verifyCardNumber=Object(index_esm.a)({name:"verifyCardNumber",mixins:[tagPropMixin_skip.a],props:{digits:{type:Number,required:!0}},computed:{isCardValid:function isCardValid(){return Object(persian_tools_esm.y)(this.digits)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{isValid:this.isCardValid});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{verifyCardNumber:verifyCardNumber},setup:function setup(){return{text:args.val}},template:'<verifyCardNumber :digits="text" v-slot="{ isValid }">\n    is given number valid: <b>{{ isValid }}</b>\n    </verifyCardNumber>'}}.bind({});Default.args={val:"6037701689095443"};__webpack_exports__.default={title:"Modules/verifyCardNumber",component:verifyCardNumber,argTypes:{val:{name:"digits",type:{name:"number",required:!0},defaultValue:null,description:"validate bank number.",table:{type:{summary:"number"},defaultValue:{summary:"null"}},control:{type:"number"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { verifyCardNumber },\n    setup() {\n        return {\n            text: args.val\n        };\n    },\n    template: `<verifyCardNumber :digits="text" v-slot="{ isValid }">\n    is given number valid: <b>{{ isValid }}</b>\n    </verifyCardNumber>`\n})'}},Default.parameters)},845:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7),__webpack_require__(71);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),verifyIranianNationalId=Object(index_esm.a)({name:"verifyIranianNationalId",mixins:[tagPropMixin_skip.a],props:{nationalId:{type:[String,Number],required:!0}},computed:{isValid:function isValid(){return Object(persian_tools_esm.z)(this.nationalId)}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{isValid:this.isValid});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{verifyIranianNationalId:verifyIranianNationalId},setup:function setup(){return{text:args.val}},template:'<verifyIranianNationalId :nationalId="text" v-slot="{ isValid }"><b>is given nation id valid: {{ isValid }}</b></verifyIranianNationalId>'}}.bind({});Default.args={val:"0963695398"};__webpack_exports__.default={title:"Modules/verifyIranianNationalId",component:verifyIranianNationalId,argTypes:{val:{name:"nationalId",type:{name:"string",required:!0},defaultValue:null,description:"national id for validation.",table:{type:{summary:"string or number"},defaultValue:{summary:"null"}},control:{type:"text"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { verifyIranianNationalId },\n    setup() {\n        return {\n            text: args.val\n        };\n    },\n    template: \'<verifyIranianNationalId :nationalId="text" v-slot="{ isValid }"><b>is given nation id valid: {{ isValid }}</b></verifyIranianNationalId>\'\n})'}},Default.parameters)},846:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__(7),__webpack_require__(60);var index_esm=__webpack_require__(8),persian_tools_esm=__webpack_require__(9),getSlot_skip=__webpack_require__(17),tagPropMixin_skip=__webpack_require__(18),wordsToNumber=Object(index_esm.a)({name:"wordsToNumber",mixins:[tagPropMixin_skip.a],props:{words:{type:String,required:!0},digits:{type:String,default:"en",validator:function validator(value){return["en","fa","ar"].includes(value)}},fuzzy:Boolean,addCommas:Boolean},computed:{convertToNumbers:function convertToNumbers(){return persian_tools_esm.e.convert(this.words,{digits:this.digits,fuzzy:this.fuzzy,addCommas:this.addCommas})}},render:function render(){var __SLOTS__=Object(getSlot_skip.a)(this,{number:this.convertToNumbers});return Object(index_esm.b)(this.tag,__SLOTS__)}}),Default=function Template(args){return{components:{wordsToNumber:wordsToNumber},setup:function setup(){return{val:args.val,addCommas:args.addCommas,fuzzy:args.fuzzy,digits:args.digits}},template:'<wordsToNumber :words="val" :fuzzy=fuzzy :addCommas=addCommas :digits=digits v-slot="{ number }">converted to: <b>{{ number }}</b></wordsToNumber>'}}.bind({});Default.args={val:"دوازده هزار بیست دو",digits:!1,fuzzy:!1,addCommas:!1};__webpack_exports__.default={title:"Modules/wordsToNumber",component:wordsToNumber,argTypes:{val:{name:"words",type:{name:"string",required:!0},defaultValue:null,description:"Convert words to number.",table:{type:{summary:"string"},defaultValue:{summary:"null"}},control:{type:"text"}},digits:{name:"digits",type:{name:"string",required:!0},defaultValue:"en",description:"Convert words to digits in given language.",table:{type:{summary:"fa | en | ar"},defaultValue:{summary:"null"}},control:{type:"radio",options:["en","fa","ar"]}},fuzzy:{name:"fuzzy",type:{name:"Boolean",required:!0},defaultValue:!1,description:"Fix typo in the Persian words by using levenshtein algorithm.",table:{type:{summary:"Boolean"},defaultValue:{summary:"null"}},control:{type:"boolean"}},addCommas:{name:"addCommas",type:{name:"Boolean",required:!0},defaultValue:!1,description:"Commas will be added to the Result.",table:{type:{summary:"Boolean"},defaultValue:{summary:"null"}},control:{type:"boolean"}}}};Default.parameters=Object.assign({storySource:{source:'(args: any) => ({\n    components: { wordsToNumber },\n    setup() {\n        return {\n            val: args.val,\n            addCommas: args.addCommas,\n            fuzzy: args.fuzzy,\n            digits: args.digits\n        };\n    },\n    template: \'<wordsToNumber :words="val" :fuzzy=fuzzy :addCommas=addCommas :digits=digits v-slot="{ number }">converted to: <b>{{ number }}</b></wordsToNumber>\'\n})'}},Default.parameters)}},[[462,2,3]]]);